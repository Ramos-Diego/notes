# THIS FILE: /etc/nginx/conf.d/myNginx.conf

upstream nodejs {
  server localhost:8080;
}

server {
  listen 80;
  listen [::]:80;
  server_name www.example.com example.com;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name www.example.com example.com;

  ssl_certificate /etc/letsencrypt/live/<insert-domain.com>/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/<insert-domain.com>/privkey.pem;

  ssl_session_timeout 1d;
  ssl_session_cache shared:MozSSL:10m;
  ssl_session_tickets off;

  ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  ssl_prefer_server_ciphers off;

  add_header Strict-Transport-Security "max-age=63072000" always;

  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/letsencrypt/live/<insert-domain.com>/chain.pem;

  resolver 1.1.1.1 1.0.0.1;

  root /path/to/static-files/directory;

  location / {
    try_files $uri @nodejs;
  }

  location @nodejs {
    proxy_pass http://nodejs;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
  }
}